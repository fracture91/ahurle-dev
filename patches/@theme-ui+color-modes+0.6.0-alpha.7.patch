diff --git a/node_modules/@theme-ui/color-modes/dist/index.d.ts b/node_modules/@theme-ui/color-modes/dist/index.d.ts
index 3373788..657fc92 100644
--- a/node_modules/@theme-ui/color-modes/dist/index.d.ts
+++ b/node_modules/@theme-ui/color-modes/dist/index.d.ts
@@ -16,3 +16,4 @@ export declare const InitializeColorMode: () => React.DetailedReactHTMLElement<{
         __html: string;
     };
 }, HTMLElement>;
+export declare const createColorStyles: (theme: any) => any;
diff --git a/node_modules/@theme-ui/color-modes/dist/index.esm.js b/node_modules/@theme-ui/color-modes/dist/index.esm.js
index b495da0..09ede9a 100644
--- a/node_modules/@theme-ui/color-modes/dist/index.esm.js
+++ b/node_modules/@theme-ui/color-modes/dist/index.esm.js
@@ -186,21 +186,28 @@ var useColorModeState = function useColorModeState(theme) {
   }),
       mode = _React$useState[0],
       setMode = _React$useState[1]; // read color mode from local storage
+  const prevMode = React.useRef();
 
 
   React.useEffect(function () {
     var stored = theme.useLocalStorage !== false && storage.get();
-    document.documentElement.classList.remove('theme-ui-' + stored);
-    document.body.classList.remove('theme-ui-' + stored);
 
     if (stored && stored !== mode) {
       setMode(stored);
     }
   }, []);
   React.useEffect(function () {
+    if (mode && prevMode.current) {
+      [document.documentElement, document.body].forEach((el) => {
+        el.classList.remove(`theme-ui-${prevMode.current}`)
+        // el.classList.forEach((value, _key, parent) => value.startsWith("theme-ui-") ? parent.remove(value) : null)
+        el.classList.add(`theme-ui-${mode}`)
+      });
+    }
     if (mode && theme.useLocalStorage !== false) {
       storage.set(mode);
     }
+    prevMode.current = mode
   }, [mode]);
 
   if (process.env.NODE_ENV !== 'production') {
@@ -283,5 +290,5 @@ var InitializeColorMode = function InitializeColorMode() {
   });
 };
 
-export { ColorModeProvider, InitializeColorMode, useColorMode };
+export { ColorModeProvider, InitializeColorMode, useColorMode, createColorStyles };
 //# sourceMappingURL=index.esm.js.map
diff --git a/node_modules/@theme-ui/color-modes/dist/index.js b/node_modules/@theme-ui/color-modes/dist/index.js
index efc25c6..5bb76ed 100644
--- a/node_modules/@theme-ui/color-modes/dist/index.js
+++ b/node_modules/@theme-ui/color-modes/dist/index.js
@@ -290,4 +290,5 @@ var InitializeColorMode = function InitializeColorMode() {
 exports.ColorModeProvider = ColorModeProvider;
 exports.InitializeColorMode = InitializeColorMode;
 exports.useColorMode = useColorMode;
+exports.createColorStyles = createColorStyles;
 //# sourceMappingURL=index.js.map
